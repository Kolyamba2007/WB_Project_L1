package main

import (
	"fmt"
	"sync"
)

func main() {
	var (
		sum int            // сумма
		wg  sync.WaitGroup // Объявление группы ожидания
		mu  sync.Mutex     // Объявление мьютекса
	)

	// Инициализируем слайс
	mas := []int{2, 4, 6, 8, 10}

	// Вызов горутин
	for i := 0; i < len(mas); i++ {
		wg.Add(1) // добавление ожидания одной горутины

		go func(e *int, wg *sync.WaitGroup) {
			defer wg.Done() // уменьшает значение счетчика ожидания на 1
			*e *= *e        // квадрат числа
			mu.Lock()       // блокировка мьютекса, т.к. sum модифицируется в нескольких горутинах
			sum += *e       // подсчет суммы квадратов
			mu.Unlock()     // разблокировка мьютекса
		}(&mas[i], &wg)
	}

	// Этот метод блокирует выполнение кода до того момента, пока счетчик ожидания будет 0
	wg.Wait()

	fmt.Println(sum)
}
